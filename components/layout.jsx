import React, {useEffect, useState} from 'react'
import Head from 'next/head'
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css'

import MobileBar from './navs/mobilebar'
import TopNav from './navs/topNav'
import Footer from './footer'

export default function Layout({children}) {
    const [isDomLoaded, setIsDomLoaded] = useState(false)
    
    useEffect(() => {
        const timeout = setTimeout(() => {
            setIsDomLoaded(true)
        }, 1000)
        return () => {
            clearTimeout(timeout)
        }
    }, [])

    const contextClass = {
        success: "bg-deepBlue text-veryLightGrey",
        error: "bg-red-600",
        info: "bg-red-500",
        warning: "bg-orange-400",
        default: "bg-deepBlue",
        dark: "bg-white-600 font-gray-300",
    };

    if(!isDomLoaded) {
        return <main className='bg-veryDeepBlue h-screen w-screen flex justify-center items-center'>
            <img src="assets/loading.gif" className='w-36 h-36' />
        </main>
    }

    if(isDomLoaded)  {
        return (
            <>
                <Head>
                    <title>Benax Collections</title>
                    <meta name="description" content="Generated by create next Nav" />
                    <link rel="icon" href="/assets/mainIcon.png" />
                </Head>
                <header>
                    <MobileBar />
                    <TopNav />
                </header>
                <main>
                    {children}
                </main>
                <footer>
                    <Footer />
                </footer>
                <ToastContainer
                toastClassName={({ type }) => contextClass[type || "default"] + 
                    " relative flex p-1 min-h-10 rounded-md justify-between overflow-hidden cursor-pointer"
                }
                    position="top-center"
                    autoClose={2000}
                    hideProgressBar={true}
                    closeOnClick
                    newestOnTop={false}
                    rtl={false}
                    pauseOnFocusLoss
                    draggable
                />
            </>
        )
    }
}